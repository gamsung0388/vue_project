package com.example.demo.board;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.file.FileService;
import com.example.demo.paging.SearchDTO;

import lombok.AllArgsConstructor;

@AllArgsConstructor
@RestController
@CrossOrigin(origins="http://localhost:3030")
public class BoardController {

	private BoardService boardService;
	private FileService fileService;
	
	//등록
	@PostMapping("/board/insert")
	public Map<String, Object> boardInsert(@RequestBody BoardDTO boardDTO){
		
		Map<String, Object> map = new HashMap<>();
		
		System.out.println("boardDTO: "+boardDTO);
		
		String board = boardService.boardInsert(boardDTO);
		String fileYn = "";
		
		System.out.println("boardDTO.getFileIdxs(): "+boardDTO.getFileIdxs());
		
		if(!boardDTO.getFileIdxs().isEmpty()) {
			fileYn = fileService.insertBoardFile(boardDTO);
		}		
				
		if(board=="Y" && fileYn=="Y") {
			System.out.println("등록 성공");
			map.put("YN", "Y");
		}else {
			map.put("YN", "N");
		}
		
		return map;
	}
	//수정
	@PostMapping("/board/update")
	public Map<String, Object> boardUpdate(@RequestBody BoardDTO boardDTO){
		
		Map<String, Object> map = new HashMap<>();
		
		System.out.println("boardDTO: "+boardDTO);
		
		String board = boardService.boardUpdate(boardDTO);
		
		if(board=="Y") {
			System.out.println("수정 성공");
		}
				
		map.put("YN", board);
				
		return map;
		
	}
	//삭제
	@GetMapping("/board/delete")
	public Map<String,Object> boardDelete(@RequestParam("checkList") List<String> checkList){
		
		Map<String, Object> map = new HashMap<>();
		
		System.out.println("checkList"+checkList);
		
		String board = boardService.boardDelete(checkList);		
		
		map.put("YN", board);
		
		return map;
	}
	
	//목록
	@GetMapping("/board/list")
	public Map<String, Object> boardList(@RequestParam("pageNum") int pageNum, SearchDTO searchDTO){
		
		searchDTO.setPage(pageNum);
		searchDTO.setPageSize(5);
		
		Map<String, Object> map = boardService.boardSelect(searchDTO);
		
		return map;
		
	}
	
	//단일
	@GetMapping("/board/one")
	public BoardDTO boardList(@RequestParam("boardNum") String boardNum){
		
		BoardDTO boardDTO = boardService.boardOne(Integer.parseInt(boardNum));
				
		return boardDTO;
		
	}
	
}
